# 0-add_integer.txt

===========================
Tests cases for 0-add_integer.py
===========================

Addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...) function``` returns the addition of its two arguments.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 5)
    7

::

    >>> add_integer(1, -2)
    -1

For floating numbers it adds after casting them to int first.

::

    >>> add_integer(2.0, 5.0)
    7


negative float nuber.

::
    >>> add_integer(-2.9, -1.2)
    -3

combination of integers and floats.

::

    >>> add_integer(4.3, -3)
    1

Replace b = 98 if it is not given.

::

    >>> add_integer(2)
    100

Non-Numbers
===========

provided number is not either int or float TypeError is given

::

    >>> add_integer("HI", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2, "HI")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer("HI", "OLLA")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     
::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
